name: Deploy Infrastructure and Monitoring

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Terraform + Ansible Deployment
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-3  # ✅ Région définie pour AWS CLI

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.6

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve

    - name: Wait for EC2 to start
      run: sleep 60

    - name: Add SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Get EC2 Public IP
      id: get_ip
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=monitoring-server" \
          --query "Reservations[*].Instances[*].InstanceId" \
          --output text \
          --region $AWS_DEFAULT_REGION)

        PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --query "Reservations[*].Instances[*].PublicIpAddress" \
          --output text \
          --region $AWS_DEFAULT_REGION)

        echo "EC2 public IP is: $PUBLIC_IP"
        echo "$PUBLIC_IP" > ip.txt
        echo "::set-output name=public_ip::$PUBLIC_IP"

    - name: Write Ansible Inventory
      run: |
        echo "[monitoring]" > ansible/hosts
        echo "$(cat ip.txt) ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/hosts

    - name: Install Ansible
      run: |
        sudo apt-get update && sudo apt-get install -y ansible

    - name: Test SSH connection
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@$(cat ip.txt) echo "SSH OK"

    - name: Run Ansible Playbook
      run: |
        ansible-playbook ansible/playbook.yml -i ansible/hosts \
          --private-key ~/.ssh/id_rsa \
          -e "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
